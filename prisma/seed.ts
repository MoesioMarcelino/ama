import { db } from "../src/lib/db";

async function main() {
  console.log("üå± Seeding database...");

  // Create a test room
  const room = await db.room.upsert({
    where: { id: "golang-ama" },
    update: {},
    create: {
      id: "golang-ama",
      name: "GoLang AMA Session",
    },
  });

  console.log("‚úÖ Room created:", room.id);

  // Create some example questions
  const questions = [
    {
      content:
        "O que √© GoLang e quais s√£o suas principais vantagens em compara√ß√£o com outras linguagens de programa√ß√£o como Python, Java ou C++?",
      roomId: room.id,
    },
    {
      content:
        "Como funcionam as goroutines em GoLang e por que elas s√£o importantes para a concorr√™ncia e paralelismo?",
      roomId: room.id,
    },
    {
      content:
        "Quais s√£o as melhores pr√°ticas para organizar o c√≥digo em um projeto GoLang, incluindo pacotes, m√≥dulos e a estrutura de diret√≥rios?",
      roomId: room.id,
      answered: true,
    },
    {
      content:
        "Como √© o gerenciamento de mem√≥ria em Go e quais s√£o as principais diferen√ßas em rela√ß√£o a linguagens com garbage collection autom√°tico?",
      roomId: room.id,
    },
  ];

  for (const questionData of questions) {
    const question = await db.question.create({
      data: questionData,
    });
    console.log("‚úÖ Question created:", question.id);

    // Add some likes to questions
    if (questionData.content.includes("goroutines")) {
      // Add multiple likes to the goroutines question
      for (let i = 1; i <= 5; i++) {
        await db.like.create({
          data: {
            questionId: question.id,
            userId: `user-${i}`,
          },
        });
      }
      console.log("‚úÖ Added 5 likes to goroutines question");
    } else if (questionData.answered) {
      // Add 3 likes to the answered question
      for (let i = 1; i <= 3; i++) {
        await db.like.create({
          data: {
            questionId: question.id,
            userId: `user-${i}`,
          },
        });
      }
      console.log("‚úÖ Added 3 likes to answered question");
    }
  }

  console.log("üéâ Seeding completed!");
}

main()
  .catch((e) => {
    console.error("‚ùå Seeding failed:", e);
    process.exit(1);
  })
  .finally(async () => {
    await db.$disconnect();
  });
